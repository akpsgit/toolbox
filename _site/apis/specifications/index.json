[
{
   "name": "API Blueprint",
   "description": "API Blueprint is a documentation-oriented API description language. A couple of semantic assumptions over the plain Markdown. API Blueprint is perfect for designing your Web API and its comprehensive documentation but also for quick prototyping and collaboration. It is easy to learn and even easier to read &ndash; after all it is just a form of plain text.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/apiblueprint-logo-2.png",
   "tags": ["definitions"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/api-blueprint/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"Website","url":"http://apiblueprint.org"},{"type":"Github Repo","url":"https://github.com/apiaryio/api-blueprint/"},{"type":"Twitter","url":"https://twitter.com/apiblueprint"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/api-blueprint.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/api-blueprint/overview"}]
},

{
   "name": "API Design Systems",
   "description": "An API Design System is a collection of curated standards, guidelines, practices, and principles aimed at helping teams build consistent, quality APIs. If this is your first time checking this out, have a look at the example, read the overview below, and check out the guidelines. The specification has more technical details about the format.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/api-design-systems.png",
   "tags": ["Systems","Governance"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/api-design-systems/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://apidesign.systems/"}]
},

{
   "name": "APIs.json",
   "description": "APIs.json or APIs.yaml is a machine readable format for describing the surface area of API operations. It doesn't describe a single API, but the operates around it, including OpenAPI, Postman collections and other machine readable artifacts, as well as human elements like documentation, pricing, and terms of services.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/screen-capture-api/2949-apis-json.jpg",
   "tags": ["definitions","discovery"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/apis-json/",
   "specificationVersion": "0.14",
   "apis": [{"name":"APIs.json","description":null,"image":"http://kinlane-productions2.s3.amazonaws.com/screen-capture-api/2949-apis-json.jpg","humanURL":"http://apisjson.org","baseURL":"http://apisjson.org","tags":[],"properties":[{"type":"x-openapi","url":"https://raw.githubusercontent.com/api-evangelist/apis-json/master/apis-json-openapi.json"},{"type":"x-postman-collecction","url":"https://raw.githubusercontent.com/api-evangelist/apis-json/master/apis-json-postman-collection.json"}]}],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"Website","url":"http://apisjson.org"},{"type":"Blog","url":"http://apisjson.org/blog/"},{"type":"Blog RSS","url":"http://apisjson.org/blog.xml"},{"type":"Developer","url":"http://developer.trade.gov/apis.json"},{"type":"Forum","url":"https://groups.google.com/forum/#!forum/apisjson"},{"type":"Github","url":"https://github.com/apis-json/api-json/issues"},{"type":"Twitter","url":"https://twitter.com/APIsjson"},{"type":"Website","url":"http://apisjson.org/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/apis-json.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/apis-json/overview"}]
},

{
   "name": "Apache Avro",
   "description": "Apache Avro is a data serialization system. Avro relies on schemas. When Avro data is read, the schema used when writing it is always present. This permits each datum to be written with no per-value overheads, making serialization both fast and small. This also facilitates use with dynamic, scripting languages, since data, together with its schema, is fully self-describing.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/apache-avro.png",
   "tags": ["definitions","language api"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/apache-avro/",
   "specificationVersion": "0.14",
   "apis": [{"name":"Apache Avro","description":null,"image":"http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/apache-avro.png","humanURL":"https://avro.apache.org/docs/current/","baseURL":"https://avro.apache.org/docs/current/","tags":[],"properties":[{"type":"x-openapi","url":"https://raw.githubusercontent.com/api-evangelist/apache-avro/master/apache-avro-openapi.json"},{"type":"x-postman-collecction","url":"https://raw.githubusercontent.com/api-evangelist/apache-avro/master/apache-avro-postman-collection.json"}]}],
   "x-common": [{"type":"Code","url":"https://code.google.com/p/protobuf/"},{"type":"Website","url":"https://avro.apache.org/docs/current/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/apache-avro.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/apache-avro/overview"}]
},

{
   "name": "Apache Thrift",
   "description": "The Apache Thrift software framework, for scalable cross-language  services development, combines a software stack with a code generation  engine to build services that work efficiently and seamlessly between  C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa,  JavaScript, Node.js, Smalltalk, OCaml and Delphi and other languages.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/apache-thrift-logo.png",
   "tags": ["definitions"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/apache-thrift/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Website","url":"https://thrift.apache.org/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/apache-thrift.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/apache-thrift/overview"}]
},

{
   "name": "AsyncAPI",
   "description": "Open source tools to easily build and maintain your event-driven architecture. All powered by the AsyncAPI specification, the industry standard for defining asynchronous APIs. Providing a sister specification for the OpenAPI specification that can be used to describe event and message driven APIs.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/asyncapi-logo.png",
   "tags": ["definitions","event-driven","publish subscribe"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/asyncapi/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"Github","url":"https://github.com/asyncapi"},{"type":"LinkedIn","url":"https://www.linkedin.com/company/asyncapi"},{"type":"Twitter","url":"https://twitter.com/AsyncAPISpec"},{"type":"Website","url":"https://www.asyncapi.com/"},{"type":"About","url":"https://www.asyncapi.com/about/"},{"type":"Blog","url":"https://www.asyncapi.com/blog/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/asyncapi.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/asyncapi/overview"}]
},

{
   "name": "CloudEvents",
   "description": "Enter CloudEvents, a specification for describing event data in a common way. CloudEvents seeks to ease event declaration and delivery across services, platforms and beyond! CloudEvents is a new effort and it&rsquo;s still under active development. However, its working group has received a surprising amount of industry interest, ranging from major cloud providers to popular SaaS companies. Our end goal is to offer this specification to the Cloud Native Computing Foundation.",
   "image": "http://api.specificationtoolbox.com/images/specifications/cloudevents.png",
   "tags": ["Webhooks","Under Active Development","Events","Event Declaration","Event Data"],
   "created": "2020-12-23",
   "modified": "2020-12-24PST10:05:00-28800",
   "url": "/specifications/cloudevents/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-github","url":"https://github.com/cloudevents/"},{"type":"x-website","url":"http://cloudevents.io"}]
},

{
   "name": "Cue",
   "description": "CUE is an open source language, with a rich set of APIs and tooling, for defining, generating, and validating all kinds of data - configuration, APIs, database schemas, code, â€¦ you name it.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/cue.png",
   "tags": ["Systems","Governance"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/cue/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-cue","url":"https://github.com/cuelang/"},{"type":"x-website","url":"https://cuelang.org/"}]
},

{
   "name": "GraphQL",
   "description": "GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/graphql.png",
   "tags": ["definitions","graphql"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/graphql/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"GitHub","url":"https://github.com/graphql"},{"type":"Twitter","url":"https://twitter.com/GraphQL"},{"type":"Website","url":"https://graphql.org/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/graphql.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/graphql/overview"}]
},

{
   "name": "JMESPath",
   "description": "The JMESPath language is described in an ABNF grammar with a complete specification. This ensures that the language syntax is precisely defined. JMESPath has a full suite of data driven testcases. This ensures parity for multiple libraries, and makes it easy for developers to implement JMESPath in their language of choice.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/jmespath.png",
   "tags": ["Matching","Discovery","JSON"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/jmespath/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://jmespath.org/"}]
},

{
   "name": "JSON Schema",
   "description": "JSON Schema is a vocabulary that allows you to annotate and validate JSON documents, allowing you to describe existing data formats, while providing clear human and machine readable documentation, as part of testing, and the validation of data being submitted. JSON Schema is used by both OpenAPI and AsyncAPI to define objects sent back and forth as part of API communication.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/json-schema.jpg",
   "tags": ["Schema","Modeling","Specifications"],
   "created": "2021-01-04",
   "modified": "2021-01-28",
   "url": "/specifications/json-schema/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Github","url":"https://github.com/json-schema-org"},{"type":"Website","url":"https://json-schema.org/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/json-schema.jpg"},{"type":"x-postman-workspace","url":"https://www.postman.com/api-evangelist/workspace/json-schema/overview"}]
},

{
   "name": "JSON Type Definition",
   "description": "This document proposes a format, called JSON Type Definition (JTD), for describing the shape of JavaScript Object Notation (JSON) messages. Its main goals are to enable code generation from schemas as well as portable validation with standardized error indicators. To this end, JTD is intentionally limited to be no more expressive than the type systems of mainstream programming languages.  This intentional limitation, as well as the decision to make JTD schemas be JSON documents, makes tooling atop of JTD easier to build.",
   "image": "http://api.specificationtoolbox.com/images/specifications/json-type-definition.png",
   "tags": ["JSON","Modeling","Schema","Validation","Errors"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/json-type-definition/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://tools.ietf.org/html/rfc8927"}]
},

{
   "name": "JSON Web Token (JWT)",
   "description": "JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.",
   "image": "http://api.specificationtoolbox.com/images/specifications/json-web-token-jwt.png",
   "tags": ["Authorization","Authentication","OAuth"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/json-web-token-jwt/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://tools.ietf.org/html/rfc7519"}]
},

{
   "name": "JSON Web Token (JWT) Profile for OAuth 2.0 Access Tokens",
   "description": "This specification defines a profile for issuing OAuth 2.0 access tokens in JSON web token (JWT) format.  Authorization servers and resource servers from different vendors can leverage this profile to issue and consume access tokens in interoperable manner.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/json-web-token-jwt-profile-for-oauth-20-access-tokens.png",
   "tags": ["Matching","Discovery","JSON"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/json-web-token-jwt-profile-for-oauth-20-access-tokens/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-access-token-jwt-11"}]
},

{
   "name": "JSON-LD",
   "description": "JSON-LD is a lightweight Linked Data format. It is easy for humans to read and write. It is based on the already successful JSON format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, REST Web services, and unstructured databases such as Apache CouchDB and MongoDB.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/json-ld.png",
   "tags": ["definitions","semantics","standards"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/jsonld/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Curated Source","url":"http://json-ld.org/index.html"},{"type":"Website","url":"http://json-ld.org"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/jsonld.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/jsonld/overview"}]
},

{
   "name": "JSONPath",
   "description": "JSONPath expressions always refer to a JSON structure in the same way as XPath expression are used in combination with an XML document. Since a JSON structure is usually anonymous and doesn't necessarily have a "root member object" JSONPath assumes the abstract name $ assigned to the outer level object.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/jsonpath.png",
   "tags": ["Matching","Discovery","JSON"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/jsonpath/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://tools.ietf.org/id/draft-goessner-dispatch-jsonpath-00.html"}]
},

{
   "name": "JSONata",
   "description": "JSONata is a lightweight query and transformation language for JSON data. Inspired by the 'location path' semantics of XPath 3.1, it allows sophisticated queries to be expressed in a compact and intuitive notation. A rich complement of built in operators and functions is provided for manipulating and combining extracted data, and the results of queries can be formatted into any JSON output structure using familiar JSON object and array syntax. Coupled with the facility to create user defined functions, advanced expressions can be built to tackle any JSON query and transformation task.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/jsonata.png",
   "tags": ["JSON","Transformation"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/jsonata/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-github","url":"https://github.com/jsonata-js"},{"type":"x-website","url":"http://docs.jsonata.org/"}]
},

{
   "name": "OAuth",
   "description": "An open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. OAuth is a way to get access to protected data from an application. It's safer and more secure than asking users to log in with passwords. Use OAuth to let application developers securely get access to your users' data without sharing their passwords.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/oauth-logo.png",
   "tags": ["authentication","authorization","definitions","security","standards"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/oauth/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Website","url":"https://oauth.net/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/screenshots/oauth-screenshot.png"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/oauth/overview"}]
},

{
   "name": "Open Policy Agent",
   "description": "Stop using a different policy language, policy model, and policy API for every product and service you use. Use OPA for a unified toolset and framework for policy across the cloud native stack. Whether for one service or for all your services, use OPA to decouple policy from the service's code so you can release, analyze, and review policies (which security and compliance teams love) without sacrificing availability or performance.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/open-policy-agent.png",
   "tags": ["Policies"],
   "created": "2021-06-05",
   "modified": "2021-06-05",
   "url": "/specifications/open-policy-agent/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-github","url":"https://github.com/open-policy-agent"},{"type":"x-twitter","url":"https://twitter.com/openpolicyagent"},{"type":"x-website","url":"https://www.openpolicyagent.org/"}]
},

{
   "name": "OpenAPI",
   "description": "The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for REST APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/OpenAPI-Logo-Stacked-Pantone.png",
   "tags": ["HTTP","Specifications","REST"],
   "created": "2021-01-04",
   "modified": "2021-01-28",
   "url": "/specifications/openapi/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"Blog","url":"https://openapis.org/news-faq/blog"},{"type":"Blog RSS","url":"https://www.openapis.org/feed"},{"type":"Developer","url":"https://aapi.io/"},{"type":"Github","url":"https://github.com/OAI"},{"type":"Issues","url":"https://github.com/OAI/OpenAPI-Specification/issues"},{"type":"Linkedin","url":"https://www.linkedin.com/groups/8556951"},{"type":"LinkedIn Group","url":"https://www.linkedin.com/groups/8556951"},{"type":"Open Source","url":"https://www.openapis.org/specification/repo"},{"type":"Privacy","url":"http://www.linuxfoundation.org/privacy"},{"type":"Terms Of Service","url":"http://www.linuxfoundation.org/terms"},{"type":"Twitter","url":"https://twitter.com/openapispec"},{"type":"Website","url":"https://openapis.org/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/openapi-spec.jpg"},{"type":"x-postman-workspace","url":"https://www.postman.com/api-evangelist/workspace/openapi/overview"}]
},

{
   "name": "OpenID",
   "description": "OpenID is an open standard and decentralized authentication protocol. Promoted by the non-profit OpenID Foundation, it allows users to be authenticated by co-operating sites (known as relying parties, or RP) using a third-party service, eliminating the need for webmasters to provide their own ad hoc login systems, and allowing users to log into multiple unrelated websites without having to have a separate identity and password for each. Users create accounts by selecting an OpenID identity provider[1] and then use those accounts to sign onto any website that accepts OpenID authentication. Several large organizations either issue or accept OpenIDs on their websites, according to the OpenID Foundation.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/openid-logo.png",
   "tags": ["definitions","identity","standards"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/openid/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Twitter","url":"https://twitter.com/openid/"},{"type":"Website","url":"https://openid.net/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/openid.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/openid/overview"}]
},

{
   "name": "OpenRPC",
   "description": "The OpenRPC Specification defines a standard, programming language-agnostic interface description for JSON-RPC 2.0 APIs. It is both human and machine-readable. Use cases for machine-readable JSON-RPC API definition documents include, but are not limited to specification driven development, interactive documentation, code generation, documentation, clients, servers, and automation of test cases. OpenRPC documents describe a JSON-RPC APIs services and are represented in JSON format.",
   "image": "http://api.specificationtoolbox.com/images/specifications/openrpc.png",
   "tags": ["RPC","JSON"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/openrpc/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://open-rpc.org/"},{"type":"x-github","url":"https://github.com/open-rpc"},{"type":"x-twitter","url":"https://twitter.com/open_rpc"}]
},

{
   "name": "Postman Collections",
   "description": "Postman collections are are machine readable definitions that can used to define an API and used to execute requests against an HTTP API. Providing an artifact that can be used to mock, document, test, automate, and orchestrate with APIs across the API lifecycle.",
   "image": "https://kinlane-productions2.s3.amazonaws.com/screenshots/postman-collections.png",
   "tags": ["Definitions"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/postman-collections/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://www.postman.com/collection/"},{"type":"x-screenshot","url":"https://kinlane-productions2.s3.amazonaws.com/screenshots/postman-collections.png"}]
},

{
   "name": "Postman Environments",
   "description": "Postman environments are machine readable definitions that can be used to store key / value pairs that can be then applied to a Postman collection at runtime. Storing base URL, API keys, tokens, and other valuable data.",
   "image": "https://kinlane-productions2.s3.amazonaws.com/screenshots/postman-environments.png",
   "tags": ["Definitions"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/postman-environments/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://learning.postman.com/docs/sending-requests/managing-environments/"},{"type":"x-screenshot","url":"https://kinlane-productions2.s3.amazonaws.com/screenshots/postman-environments.png"}]
},

{
   "name": "Problem Details for HTTP APIs",
   "description": "This document defines a "problem detail" as a way to carry machine-readable details of errors in a HTTP response to avoid the need to define new error response formats for HTTP APIs.",
   "image": "http://api.specificationtoolbox.com/images/specifications/problem-details-for-http-apis.png",
   "tags": ["Errors","Problems"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/problem-details-for-http-apis/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://ietf-wg-httpapi.github.io/rfc7807bis/draft-ietf-httpapi-rfc7807bis.html"},{"type":"x-github","url":"https://github.com/ietf-wg-httpapi/rfc7807bis"}]
},

{
   "name": "Protocol Buffers",
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible mechanism for serializing structured data â€“ think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages.",
   "image": "http://api.specificationtoolbox.com/images/specifications/protocol-buffers.png",
   "tags": ["Serialization"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/protocol-buffers/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://developers.google.com/protocol-buffers"},{"type":"x-website","url":"https://developers.google.com/protocol-buffers"}]
},

{
   "name": "RAML",
   "description": "A simple but powerful syntax for modeling APIs, enabling the rapid development of APIs using an approachable syntax which can scale from hobby project to enterprise application. RAML lets you see what your API looks like as you design it, using easy to read plain text. Without having to write a single line of code you can not only perfect your API design, but also create a fully functional mock for customers, partners, and other developers.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/screen-capture-api/1917-raml.jpg",
   "tags": ["definitions","markdown"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/raml/",
   "specificationVersion": "0.14",
   "apis": [{"name":"RAML","description":null,"image":"http://kinlane-productions2.s3.amazonaws.com/screen-capture-api/1917-raml.jpg","humanURL":"http://raml.org","baseURL":"http://raml.org","tags":[],"properties":[{"type":"x-openapi","url":"https://raw.githubusercontent.com/api-evangelist/raml/master/raml-openapi.json"},{"type":"x-postman-collecction","url":"https://raw.githubusercontent.com/api-evangelist/raml/master/raml-postman-collection.json"}]}],
   "x-common": [{"type":"Website","url":"http://raml.org"},{"type":"Blog","url":"http://open-raml.blogspot.com/"},{"type":"Blog RSS","url":"http://open-raml.blogspot.com/feeds/posts/default?alt=rss"},{"type":"Email","url":"info@raml.org"},{"type":"Forum","url":"https://forum.raml.org"},{"type":"Github","url":"https://github.com/search?utf8=%E2%9C%93&q=RAML"},{"type":"Twitter","url":"https://twitter.com/ramlapi"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/raml.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/raml/overview"}]
},

{
   "name": "RFC 8941 Structured Field Values for HTTP",
   "description": "This document describes a set of data types and associated algorithms that are intended to make it easier and safer to define and handle HTTP header and trailer fields, known as "Structured Fields", "Structured Headers", or "Structured Trailers". It is intended for use by specifications of new HTTP fields that wish to use a common syntax that is more restrictive than traditional HTTP field values.",
   "image": "http://api.specificationtoolbox.com/images/specifications/rfc-8941-structured-field-values-for-http.png",
   "tags": ["Fields","Parameters","Headers"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/rfc-8941-structured-field-values-for-http/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://www.rfc-editor.org/rfc/rfc8941.html"}]
},

{
   "name": "Schema.org",
   "description": "Schema.org is a collaborative, community activity with a mission to create, maintain, and promote schemas for structured data on the Internet, on web pages, in email messages, and beyond. Schema.org vocabulary can be used with many different encodings, including RDFa, Microdata and JSON-LD.&nbsp;",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/schema-org-logo.jpeg",
   "tags": ["definitions","schema"],
   "created": "2021-01-04",
   "modified": "2021-01-04",
   "url": "/specifications/schema-org/",
   "specificationVersion": "0.14",
   "apis": [{"name":"Schema.org","description":null,"image":"http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/schema-org-logo.jpeg","humanURL":"http://schema.org","baseURL":"http://schema.org","tags":[],"properties":[{"type":"x-openapi","url":"https://raw.githubusercontent.com/api-evangelist/schema-org/master/schema-org-openapi.json"},{"type":"x-postman-collecction","url":"https://raw.githubusercontent.com/api-evangelist/schema-org/master/schema-org-postman-collection.json"}]}],
   "x-common": [{"type":"APIs.json","url":"https://raw.githubusercontent.com/api-evangelist/1forge/master/apis.json"},{"type":"Blog","url":"http://blog.schema.org"},{"type":"Blog","url":"http://blog.schema.org/"},{"type":"Blog RSS","url":"http://blog.schema.org/feeds/posts/default?alt=rss"},{"type":"Github","url":"http://github.com/schemaorg/schemaorg"},{"type":"Website","url":"http://schema.org"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/schema-org.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/schema-org/overview"}]
},

{
   "name": "Semoasa",
   "description": "The OpenAPI Specification, formerly known as the Swagger Specification, is a standard, machine-readable format for REST-style API definitions and documentation. Swagger 2.0 introduced vendor extensions, which allow certain objects to have properties named with an x- prefix, with arbitrary or independently specified property values. Vendor extensions were later renamed to specification extensions in OpenAPI 2.0 and 3.0.",
   "image": "http://api.specificationtoolbox.com/images/specifications/semoasa.png",
   "tags": ["Extensions","Discovery"],
   "created": "2021-01-14",
   "modified": "2021-01-14",
   "url": "/specifications/semoasa/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-github","url":"https://github.com/RepreZen/Semoasa"},{"type":"x-screenshot","url":"http://api.specificationtoolbox.com/images/specifications/semoasa.png"}]
},

{
   "name": "Smithy",
   "description": "A language for defining services and SDKs. Smithy is designed to work with any programming language, describe services running in any environment, and work with any kind of transport or serialization format. Smithy is extended through traits. Smithy's extensible meta-model can evolve and capture more information about services without breaking changes. Customizable API standards help to automatically ensure that APIs meet customer expectations. Validation rules can be shared and applied to all APIs in an organization.",
   "image": "http://api.specificationtoolbox.com/images/specifications/smithy.png",
   "tags": ["AWS","Traits"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/smithy/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://awslabs.github.io/smithy/"},{"type":"x-github","url":"https://github.com/awslabs/smithy"}]
},

{
   "name": "The Open Data Initiative",
   "description": "Deliver unparalleled business insight from your behavioral, transactional, financial, and operational data with the Open Data Initiativeâ€”a jointly developed vision by Adobe, Microsoft, and SAP. The Open Data Initiative provides a platform for a single, comprehensive view of your data, bringing together and enriching data from all your lines of business, across all your systems to deliver real-time intelligence back into your applications and services.",
   "image": "http://api.specificationtoolbox.com/images/specifications/the-open-data-initiative.png",
   "tags": ["Data"],
   "created": "2021-01-05",
   "modified": "2021-02-09",
   "url": "/specifications/the-open-data-initiative/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"x-website","url":"https://www.microsoft.com/en-us/open-data-initiative"}]
},

{
   "name": "gRPC",
   "description": "gRPC is a modern open source high performance RPC framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services.",
   "image": "http://kinlane-productions2.s3.amazonaws.com/api-evangelist-site/company/logos/grpc.png",
   "tags": ["definitions","grpc"],
   "created": "2021-01-05",
   "modified": "2021-01-05",
   "url": "/specifications/grpc/",
   "specificationVersion": "0.14",
   "apis": [],
   "x-common": [{"type":"Website","url":"http://www.grpc.io"},{"type":"Blog","url":"http://www.grpc.io/blog/"},{"type":"Blog RSS","url":"http://www.grpc.io/feed.xml"},{"type":"Github","url":"https://github.com/grpc"},{"type":"Twitter","url":"https://twitter.com/grpcio"},{"type":"Website","url":"http://www.grpc.io/"},{"type":"x-screenshot","url":"http://kinlane-productions2.s3.amazonaws.com/grpc.jpg"},{"type":"x-workspace","url":"https://www.postman.com/api-evangelist/workspace/grpc/overview"}]
}
]
